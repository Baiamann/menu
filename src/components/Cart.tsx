"use client";

import React, { useState } from "react";
import { useCart } from "@/app/context/CartContext";
import Link from "next/link";
import Image from "next/image";
import Rating from "./Rating";
import "./Cart.css";

interface CartItem {
  id: number;
  name: string;
  price: number;
  quantity: number;
  imageUrl: string;
  description: string;
  rating: number;
}

const OrderSuccess = ({ orderDetails, onClose }: { orderDetails: any, onClose: () => void }) => {
  const deliveryTime = new Date();
  deliveryTime.setMinutes(deliveryTime.getMinutes() + 30);

  return (
    <div className="order-success">
      <div className="success-content">
        <div className="success-icon">‚úì</div>
        <h2>–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!</h2>
        <div className="delivery-time">
          <p>–û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏:</p>
          <p className="delivery-time-value">{deliveryTime.toLocaleTimeString()}</p>
          <p className="delivery-note">(–ø—Ä–∏–º–µ—Ä–Ω–æ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç)</p>
        </div>
        <div className="order-details">
          <h3>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</h3>
          <div className="detail-row">
            <span className="detail-label">–ò–º—è:</span>
            <span className="detail-value">{orderDetails.name}</span>
          </div>
          <div className="detail-row">
            <span className="detail-label">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
            <span className="detail-value">{orderDetails.phone}</span>
          </div>
          <div className="detail-row">
            <span className="detail-label">–ê–¥—Ä–µ—Å:</span>
            <span className="detail-value">{orderDetails.address}</span>
          </div>
          <div className="detail-row">
            <span className="detail-label">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</span>
            <span className="detail-value">{orderDetails.comment || "–ù–µ—Ç"}</span>
          </div>
          
          <div className="order-items">
            <h4>–í–∞—à –∑–∞–∫–∞–∑:</h4>
            {orderDetails.items.map((item: CartItem) => (
              <div key={item.id} className="order-item">
                <div className="order-item-details">
                  <span className="order-item-name">{item.name} x {item.quantity}</span>
                  <Rating value={item.rating} />
                </div>
                <span className="order-item-price">{item.price * item.quantity} ‚ÇΩ</span>
              </div>
            ))}
            <div className="order-total">
              <span>–ò—Ç–æ–≥–æ:</span>
              <span>{orderDetails.total} ‚ÇΩ</span>
            </div>
          </div>
        </div>
        <div className="delivery-info">
          <p>–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞</p>
          <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞! üçù</p>
        </div>
        <a href="/" className="back-to-home" onClick={onClose}>
          –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
        </a>
      </div>
    </div>
  );
};

const Cart = () => {
  const { items, removeFromCart, updateQuantity, total } = useCart();
  const [orderPlaced, setOrderPlaced] = useState(false);
  const [formData, setFormData] = useState({
    firstName: "",
    lastName: "",
    email: "",
    phone: "",
    address: "",
    city: "",
    postalCode: "",
    notes: "",
  });

  const handleQuantityChange = (id: number, newQuantity: number) => {
    if (newQuantity > 0) {
      updateQuantity(id, newQuantity);
    } else {
      removeFromCart(id);
    }
  };

  const handleInputChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const handleOrder = (e: React.FormEvent) => {
    e.preventDefault();
    if (
      !formData.firstName ||
      !formData.lastName ||
      !formData.phone ||
      !formData.address
    ) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.");
      return;
    }
    setOrderPlaced(true);
    setFormData({
      firstName: "",
      lastName: "",
      email: "",
      phone: "",
      address: "",
      city: "",
      postalCode: "",
      notes: "",
    });
  };

  if (orderPlaced) {
    return (
      <OrderSuccess orderDetails={{
        name: `${formData.firstName} ${formData.lastName}`,
        phone: formData.phone,
        address: formData.address,
        comment: formData.notes,
        items: items,
        total: total
      }} onClose={() => setOrderPlaced(false)} />
    );
  }

  return (
    <div className="cart-container">
      <div className="cart-content">
        <h2 className="cart-title">–ö–æ—Ä–∑–∏–Ω–∞</h2>

        {items?.length === 0 ? (
          <div className="empty-cart">
            <p>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
            <Link href="/">
              <span className="continue-shopping">–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é</span>
            </Link>
          </div>
        ) : (
          <div className="cart-layout">
            <div className="cart-items-section">
              <div className="cart-items">
                {items.map((item) => (
                  <div key={item.id} className="cart-item">
                    <div className="item-image">
                      <Image
                        src={item.imageUrl}
                        alt={item.name}
                        width={100}
                        height={100}
                        style={{ objectFit: 'cover' }}
                      />
                    </div>
                    <div className="item-details">
                      <h3 className="item-name">{item.name}</h3>
                      <p className="item-description">{item.description}</p>
                      <div className="item-rating">
                        <Rating value={item.rating} />
                      </div>
                      <div className="item-controls">
                        <div className="quantity-controls">
                          <button
                            onClick={() =>
                              handleQuantityChange(item.id, item.quantity - 1)
                            }
                            className="quantity-btn"
                            disabled={item.quantity <= 1}
                          >
                            -
                          </button>
                          <span className="quantity">{item.quantity}</span>
                          <button
                            onClick={() =>
                              handleQuantityChange(item.id, item.quantity + 1)
                            }
                            className="quantity-btn"
                          >
                            +
                          </button>
                        </div>
                        <div className="price-controls">
                          <span className="item-price">{item.price} ‚ÇΩ</span>
                          <span className="item-total">
                            {item.price * item.quantity} ‚ÇΩ
                          </span>
                          <button
                            onClick={() => removeFromCart(item.id)}
                            className="remove-btn"
                          >
                            –£–¥–∞–ª–∏—Ç—å
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            <div className="order-section">
              <div className="order-summary">
                <h3>–°–≤–æ–¥–∫–∞ –∑–∞–∫–∞–∑–∞</h3>
                <div className="summary-row">
                  <span>–ü–æ–¥—ã—Ç–æ–≥:</span>
                  <span>{total} ‚ÇΩ</span>
                </div>
                <div className="summary-row">
                  <span>–î–æ—Å—Ç–∞–≤–∫–∞:</span>
                  <span>–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</span>
                </div>
                <div className="summary-row total">
                  <span>–ò—Ç–æ–≥–æ:</span>
                  <span>{total} ‚ÇΩ</span>
                </div>
              </div>

              <form onSubmit={handleOrder} className="order-form">
                <h3>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h3>

                <div className="form-row">
                  <div className="form-group">
                    <label htmlFor="firstName">–ò–º—è *</label>
                    <input
                      id="firstName"
                      name="firstName"
                      type="text"
                      value={formData.firstName}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                  <div className="form-group">
                    <label htmlFor="lastName">–§–∞–º–∏–ª–∏—è *</label>
                    <input
                      id="lastName"
                      name="lastName"
                      type="text"
                      value={formData.lastName}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                </div>

                <div className="form-row">
                  <div className="form-group">
                    <label htmlFor="email">Email</label>
                    <input
                      id="email"
                      name="email"
                      type="email"
                      value={formData.email}
                      onChange={handleInputChange}
                    />
                  </div>
                  <div className="form-group">
                    <label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω *</label>
                    <input
                      id="phone"
                      name="phone"
                      type="tel"
                      value={formData.phone}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                </div>

                <div className="form-group">
                  <label htmlFor="address">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ *</label>
                  <input
                    id="address"
                    name="address"
                    type="text"
                    value={formData.address}
                    onChange={handleInputChange}
                    required
                  />
                </div>

                <div className="form-row">
                  <div className="form-group">
                    <label htmlFor="city">–ì–æ—Ä–æ–¥</label>
                    <input
                      id="city"
                      name="city"
                      type="text"
                      value={formData.city}
                      onChange={handleInputChange}
                    />
                  </div>
                  <div className="form-group">
                    <label htmlFor="postalCode">–ò–Ω–¥–µ–∫—Å</label>
                    <input
                      id="postalCode"
                      name="postalCode"
                      type="text"
                      value={formData.postalCode}
                      onChange={handleInputChange}
                    />
                  </div>
                </div>

                <div className="form-group">
                  <label htmlFor="notes">–ü—Ä–∏–º–µ—á–∞–Ω–∏—è –∫ –∑–∞–∫–∞–∑—É</label>
                  <textarea
                    id="notes"
                    name="notes"
                    value={formData.notes}
                    onChange={handleInputChange}
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –Ω–µ –∑–≤–æ–Ω–∏—Ç—å –≤ –¥–≤–µ—Ä—å, –ø–æ–∑–≤–æ–Ω–∏—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É"
                  />
                </div>

                <button type="submit" className="submit-order">
                  –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                </button>
              </form>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default Cart;
